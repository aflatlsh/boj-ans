class vector:
    def __init__(self, size=0, default=0):
        if type(size) == list:
            self.raw = size
        else:
            self.raw = [default]*size

    def __getitem__(self, index):
        if index < self.size():
            return self.raw[index]
        else:
            raise IndexError

    def __setitem__(self, index, value):
        if index < self.size():
            self.raw[index] = value
        else:
            raise IndexError

    def size(self):
        return len(self.raw)

    def empty(self):
        return self.size() == 0

    def resize(self, size, default=0):
        if self.size() >= size:
            self.raw = self.raw[:size]
        else:
            while self.size() < size:
                self.raw.append(default)

    def push_back(self, value):
        self.raw.append(value)

def ipow(x, p):
    ret = 1
    piv = x
    while p:
        if p & 1: 
            ret = ret * piv % mod
        piv = piv * piv % mod
        p >>= 1
    return ret

def berlekamp_massey(x):
    ls, cur = vector(), vector()
    lf, ld = 0, 0
    for i in range(x.size()):
        t = 0
        for j in range(cur.size()):
            t = (t + x[i-j-1] * cur[j]) % mod
        if (t - x[i]) % mod == 0: continue
        if cur.empty():
            cur.resize(i+1)
            lf = i
            ld = (t - x[i]) % mod
            continue
        k = -(x[i] - t) * ipow(ld, mod - 2) % mod
        c = vector(i-lf-1)
        c.push_back(k)
        for j in ls: c.push_back(-j * k % mod)
        if c.size() < cur.size(): c.resize(cur.size())
        for j in range(cur.size()):
            c[j] = (c[j] + cur[j]) % mod
        if i-lf+ls.size() >= cur.size():
            ls, lf, ld = cur, i, (t - x[i]) % mod
        cur = c
    for i in range(cur.size()):
        cur[i] = (cur[i] % mod + mod) % mod
    return cur

def get_nth(rec, dp, n):
    m = rec.size()
    s, t = vector(m), vector(m)
    s[0] = 1
    if m != 1: t[1] = 1
    else: t[0] = rec[0]
    def mul(v, w):
        m = v.size()
        t = vector(2*m)
        for j in range(m):
            for k in range(m):
                t[j+k] += v[j] * w[k] % mod
                if t[j+k] >= mod: t[j+k] -= mod
        for j in range(2*m-1, m-1, -1):
            for k in range(1, m+1):
                t[j-k] += t[j] * rec[k-1] % mod
                if t[j-k] >= mod: t[j-k] -= mod
        t.resize(m)
        return t
    while n:
        if n & 1:
            s = mul(s, t)
        t = mul(t, t)
        n //= 2

    ret = 0
    for i in range(m):
        ret += s[i] * dp[i] % mod
    return ret % mod

def guess_nth_term(x, n):
    if n < x.size(): return x[n]
    v = berlekamp_massey(x)
    if v.empty(): return 0
    return get_nth(v, x, n)

from math import comb

v1 = [[1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 46, 656, 702, 417, 178, 595, 773, 427, 259, 686, 4, 690, 694, 443, 196, 639, 835, 533, 427, 19, 446, 465, 911, 435, 405, 840, 304, 203, 507, 710, 276, 45, 321, 366, 687, 112, 799, 911, 769, 739, 567, 365, 932, 356, 347, 703, 109, 812, 921, 792, 772, 623, 454, 136, 590, 726, 375, 160, 535, 695, 289, 43, 332, 375, 707, 141, 848, 48, 896, 3, 899, 902, 860, 821, 740, 620, 419, 98, 517, 615, 191, 806, 56, 862, 918, 839, 816, 714, 589, 362, 10, 372, 382, 754, 195, 8, 203, 211, 414, 625, 98, 723, 821, 603, 483, 145, 628, 773, 460, 292, 752, 103, 855, 17, 872, 889, 820, 768, 647, 474, 180, 654, 834, 547, 440, 46, 486, 532, 77, 609, 686, 354, 99, 453, 552, 64], [1, 5, 17, 52, 151, 427, 249, 466, 578, 350, 207, 550, 242, 689, 636, 529, 865, 143, 729, 635, 332, 311, 90, 806, 600, 683, 186, 52, 174, 346, 632, 501, 403, 372, 133, 39, 779, 159, 834, 408, 805, 110, 658, 871, 280, 741, 526, 398, 78, 810, 805, 235, 937, 88, 533, 292, 124, 238, 486, 616, 193, 657, 610, 483, 927, 451, 69, 689, 360, 591, 180, 195, 504, 746, 661, 323, 461, 393, 908, 627, 295, 858, 427, 646, 225, 720, 829, 74, 544, 714, 732, 586, 428, 337, 454, 697, 341, 171, 922, 179, 93, 192, 932, 376, 165, 523, 248, 796, 214, 341, 380, 915, 392, 830, 344, 346, 101, 436, 278, 174, 736, 398, 678, 81, 680, 495, 485, 9, 936, 828, 532, 544, 744, 874, 126, 11, 821, 222, 250, 489, 128, 370, 664, 872, 603, 226, 229, 521, 623], [1, 3, 8, 26, 76, 213, 595, 704, 759, 175, 104, 745, 121, 345, 788, 735, 433, 71, 835, 318, 636, 626, 516, 873, 300, 342, 563, 26, 558, 643, 316, 251, 201, 186, 67, 19, 860, 80, 887, 204, 403, 525, 329, 436, 610, 841, 734, 669, 39, 876, 402, 588, 469, 514, 737, 617, 532, 119, 714, 778, 567, 329, 775, 712, 464, 225, 505, 345, 650, 766, 561, 97, 252, 844, 330, 632, 231, 196, 454, 314, 147, 429, 214, 793, 583, 831, 414, 37, 743, 827, 366, 764, 684, 639, 698, 348, 641, 86, 931, 560, 47, 566, 466, 659, 82, 732, 595, 868, 107, 171, 660, 928, 667, 885, 172, 644, 50, 218, 610, 557, 368, 670, 809, 511, 811, 247, 713, 5, 938, 414, 737, 742, 372, 908, 533, 476, 411, 581, 125, 245, 534, 185, 803, 906, 772, 584, 114, 731, 312], [1, 3, 5, 12, 43, 141, 406, 174, 220, 772, 57, 696, 805, 55, 322, 452, 725, 535, 877, 830, 859, 791, 405, 344, 837, 534, 97, 29, 870, 507, 796, 741, 355, 105, 81, 529, 102, 911, 847, 836, 575, 163, 316, 565, 307, 62, 719, 661, 71, 400, 106, 58, 608, 107, 878, 512, 653, 704, 498, 940, 826, 414, 692, 312, 193, 187, 586, 745, 284, 282, 19, 540, 828, 236, 390, 97, 609, 690, 348, 689, 831, 879, 792, 320, 46, 509, 728, 388, 611, 62, 919, 81, 337, 155, 389, 695, 475, 496, 755, 808, 928, 483, 733, 434, 496, 422, 541, 16, 363, 441, 83, 147, 457, 625, 808, 174, 107, 630, 231, 513, 91, 938, 592, 453, 170, 519, 654, 932, 727, 270, 47, 421, 0, 177, 925, 926, 175, 205, 825, 55, 678, 280, 715, 445, 267, 530, 553, 831, 749], [1, 3, 5, 8, 18, 66, 249, 820, 552, 197, 379, 426, 429, 277, 873, 911, 882, 80, 698, 86, 457, 542, 862, 427, 50, 147, 562, 759, 413, 760, 466, 70, 273, 127, 182, 431, 62, 367, 786, 918, 634, 650, 236, 499, 269, 924, 748, 377, 430, 816, 72, 927, 205, 804, 396, 734, 697, 584, 753, 331, 660, 72, 105, 687, 549, 827, 555, 543, 843, 936, 535, 529, 785, 203, 249, 327, 621, 688, 317, 112, 434, 326, 806, 401, 503, 213, 858, 550, 721, 431, 425, 886, 187, 912, 241, 206, 758, 385, 89, 459, 648, 744, 926, 703, 83, 348, 512, 558, 761, 96, 250, 490, 680, 869, 831, 289, 397, 351, 692, 591, 570, 260, 633, 39, 783, 157, 273, 772, 311, 162, 354, 445, 55, 881, 386, 852, 148, 650, 748, 251, 294, 622, 74, 142, 831, 25, 501, 433, 26], [1, 3, 5, 8, 13, 27, 97, 405, 576, 353, 392, 879, 738, 604, 624, 902, 320, 788, 427, 222, 102, 616, 893, 240, 264, 45, 246, 578, 837, 91, 497, 357, 825, 369, 611, 512, 650, 636, 838, 582, 935, 894, 602, 688, 534, 570, 672, 736, 266, 644, 736, 470, 715, 679, 56, 795, 134, 195, 421, 639, 404, 127, 587, 694, 655, 461, 131, 44, 106, 638, 356, 810, 305, 5, 178, 651, 523, 926, 872, 362, 13, 871, 342, 229, 913, 589, 299, 296, 243, 902, 816, 439, 225, 114, 758, 837, 756, 255, 794, 866, 354, 816, 489, 270, 718, 849, 216, 61, 282, 584, 177, 706, 653, 748, 512, 800, 835, 366, 52, 673, 242, 166, 852, 56, 546, 476, 313, 211, 295, 144, 234, 671, 566, 27, 57, 374, 222, 503, 600, 555, 111, 699, 26, 920, 224, 429, 549, 8, 879], [1, 3, 5, 8, 13, 21, 41, 139, 621, 712, 217, 401, 170, 342, 765, 89, 356, 590, 330, 454, 303, 398, 790, 744, 891, 518, 205, 404, 501, 307, 345, 188, 908, 288, 803, 849, 410, 151, 191, 441, 433, 825, 271, 312, 650, 922, 596, 802, 222, 516, 392, 101, 467, 603, 868, 305, 856, 267, 824, 43, 310, 61, 756, 434, 176, 515, 439, 14, 456, 629, 186, 862, 130, 48, 934, 851, 812, 863, 275, 936, 30, 272, 12, 830, 3, 897, 659, 937, 892, 816, 168, 416, 338, 670, 121, 657, 882, 178, 514, 472, 696, 920, 695, 123, 45, 688, 116, 490, 727, 415, 469, 523, 834, 724, 650, 241, 252, 613, 329, 484, 617, 261, 100, 174, 393, 204, 201, 908, 234, 545, 817, 742, 747, 602, 515, 771, 638, 886, 736, 390, 235, 694, 112, 431, 147, 62, 686, 26, 478], [1, 3, 5, 8, 13, 21, 34, 63, 197, 912, 411, 119, 664, 438, 723, 526, 144, 166, 868, 273, 232, 394, 756, 722, 388, 156, 96, 320, 431, 643, 860, 205, 640, 876, 874, 479, 200, 123, 762, 71, 419, 745, 407, 722, 819, 548, 797, 676, 493, 653, 339, 158, 439, 630, 31, 161, 336, 780, 612, 551, 572, 754, 869, 460, 255, 470, 39, 584, 771, 594, 442, 91, 599, 29, 42, 900, 638, 745, 561, 21, 416, 121, 480, 75, 523, 80, 462, 345, 860, 913, 541, 153, 883, 878, 287, 161, 332, 570, 71, 681, 172, 228, 911, 326, 129, 793, 100, 540, 473, 374, 225, 114, 760, 4, 145, 388, 113, 210, 278, 591, 604, 706, 298, 0, 835, 305, 677, 16, 402, 419, 577, 662, 922, 665, 552, 349, 857, 676, 37, 73, 894, 741, 912, 348, 175, 547, 338, 643, 643], [1, 3, 5, 8, 13, 21, 34, 55, 98, 279, 357, 761, 307, 175, 197, 936, 711, 534, 62, 815, 110, 208, 200, 679, 459, 372, 861, 734, 827, 60, 361, 208, 65, 8, 269, 711, 386, 412, 590, 51, 240, 816, 359, 883, 68, 472, 338, 795, 49, 148, 552, 30, 31, 84, 161, 179, 796, 627, 421, 692, 273, 509, 883, 638, 369, 644, 488, 343, 543, 680, 620, 866, 726, 371, 239, 302, 892, 629, 744, 290, 131, 511, 744, 104, 700, 612, 594, 707, 620, 644, 219, 568, 56, 544, 437, 629, 479, 872, 712, 938, 642, 557, 553, 735, 457, 837, 742, 895, 620, 461, 497, 843, 553, 421, 521, 196, 839, 808, 143, 149, 21, 706, 179, 230, 763, 614, 486, 158, 274, 472, 580, 723, 715, 665, 183, 121, 666, 302, 574, 589, 417, 608, 649, 699, 63, 451, 868, 113, 69], [1, 3, 5, 8, 13, 21, 34, 55, 89, 154, 398, 866, 55, 391, 734, 316, 214, 265, 727, 87, 34, 473, 327, 799, 403, 540, 345, 801, 303, 142, 631, 41, 92, 418, 534, 17, 852, 97, 834, 356, 442, 383, 830, 685, 468, 856, 684, 267, 418, 901, 718, 259, 604, 559, 495, 780, 921, 587, 71, 95, 588, 179, 666, 318, 896, 887, 872, 723, 586, 392, 775, 517, 9, 922, 794, 723, 577, 706, 725, 624, 813, 522, 31, 903, 924, 911, 461, 820, 517, 350, 750, 453, 261, 925, 383, 726, 523, 732, 901, 571, 787, 914, 682, 330, 205, 835, 289, 56, 373, 206, 800, 390, 90, 395, 367, 392, 0, 272, 209, 447, 126, 154, 228, 278, 84, 728, 91, 284, 716, 821, 799, 644, 35, 771, 693, 517, 712, 488, 236, 346, 219, 851, 419, 581, 661, 96, 467, 412, 58], [1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 244, 575, 598, 386, 328, 47, 50, 300, 729, 508, 181, 204, 345, 227, 142, 160, 711, 722, 505, 848, 356, 130, 506, 504, 647, 845, 279, 312, 183, 768, 563, 811, 568, 584, 487, 812, 538, 747, 786, 32, 58, 120, 885, 421, 926, 797, 544, 269, 153, 104, 709, 801, 660, 708, 333, 473, 374, 4, 181, 867, 331, 853, 285, 775, 842, 267, 401, 594, 594, 772, 593, 84, 602, 235, 683, 330, 702, 924, 543, 402, 940, 240, 718, 15, 505, 292, 427, 357, 314, 507, 208, 799, 105, 186, 629, 917, 564, 507, 218, 219, 384, 751, 647, 893, 784, 243, 288, 915, 877, 46, 847, 932, 425, 809, 140, 141, 452, 372, 787, 247, 631, 559, 939, 572, 529, 696, 649, 177, 232, 806, 618, 527, 80, 800, 869, 355, 686, 167, 806]]
v2 = [[1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 319, 7084, 7403, 3860, 636, 4496, 5132, 9628, 4133, 3134, 7267, 10401, 7041, 6815, 3229, 10044, 2646, 2063, 4709, 6772, 854, 7626, 8480, 5479, 3332, 8811, 1516, 10327, 1216, 916, 2132, 3048, 5180, 8228, 2781, 382, 3163, 3545, 6708, 10253, 6334, 5960, 1667, 7627, 9294, 6294, 4961, 628, 5589, 6217, 1179, 7396, 8575, 5344, 3292, 8636, 1301, 9937, 611, 10548, 532, 453, 985, 1438, 2423, 3861, 6284, 10145, 5802, 5320, 495, 5815, 6310, 1498, 7808, 9306, 6487, 5166, 1026, 6192, 7218, 2783, 10001, 2157, 1531, 3688, 5219, 8907, 3499, 1779, 5278, 7057, 1708, 8765, 10473, 8611, 8457, 6441, 4271, 85, 4356, 4441, 8797, 2611, 781, 3392, 4173, 7565, 1111, 8676, 9787, 7836, 6996, 4205, 574, 4779, 5353, 10132, 4858, 4363, 9221, 2957, 1551, 4508, 6059, 10567, 5999, 5939, 1311, 7250, 8561], [1, 5, 17, 52, 151, 427, 1190, 3289, 9047, 3562, 4197, 5268, 8913, 8095, 3732, 4984, 359, 6824, 4058, 7594, 9453, 6073, 10434, 5629, 5377, 10386, 3778, 10208, 3358, 5652, 3807, 4479, 9174, 5469, 51, 2476, 9763, 9996, 8491, 2092, 8392, 5193, 9248, 5812, 10382, 207, 1140, 3610, 1005, 1651, 10492, 633, 3777, 9202, 7867, 5802, 2165, 4933, 9903, 3751, 7721, 9317, 862, 5398, 6854, 3878, 5799, 4317, 157, 5717, 9696, 4289, 10008, 5349, 134, 10276, 177, 10200, 32, 10290, 375, 1514, 6201, 8664, 4133, 3858, 530, 3469, 8493, 8485, 8385, 3357, 10038, 4215, 3112, 9193, 4382, 1461, 8277, 1005, 7311, 8162, 596, 10577, 6311, 175, 5844, 3190, 2092, 6994, 9253, 9378, 5227, 5940, 9537, 5514, 2492, 5470, 9653, 2806, 1834, 1264, 6977, 9247, 4740, 3658, 7280, 9298, 435, 6048, 9335, 3090, 4170, 8672, 9783, 4534, 1611, 6026, 3241, 237, 8507, 742, 3303, 8030, 7411, 4940, 4759, 5394, 7613], [1, 3, 8, 26, 76, 213, 595, 1645, 4523, 1781, 2099, 7947, 9770, 4048, 7179, 2492, 180, 8725, 2029, 9111, 4726, 8350, 10531, 2814, 8002, 10507, 7202, 5104, 6993, 8139, 7217, 2240, 9900, 8048, 26, 6551, 10195, 10312, 4245, 1046, 9510, 2596, 4624, 8220, 10504, 5417, 5884, 7118, 5816, 826, 10559, 5630, 1889, 9914, 9247, 8215, 1082, 7780, 4952, 1875, 9174, 4659, 5744, 2699, 8741, 7252, 8213, 2159, 78, 8172, 10162, 2144, 5004, 2675, 5380, 5138, 89, 10413, 16, 10459, 187, 757, 3101, 9645, 7380, 7243, 5578, 7048, 4247, 4242, 9506, 1679, 10332, 7421, 6870, 4596, 2191, 731, 4138, 5816, 3656, 9394, 298, 5289, 3155, 5401, 8236, 6908, 1046, 8811, 4626, 4689, 2614, 8283, 10082, 8071, 6559, 2735, 4827, 6716, 917, 5946, 3488, 9937, 7684, 7142, 3640, 9963, 217, 3024, 4668, 6858, 2085, 9650, 4891, 2267, 806, 8326, 6934, 119, 4253, 371, 1652, 9328, 9019, 7784, 2379, 2697, 3807], [1, 3, 5, 12, 43, 141, 406, 1115, 3043, 8300, 1387, 8726, 9839, 6066, 1354, 5793, 4726, 10474, 8444, 6784, 7312, 1641, 5827, 2211, 4738, 1945, 2089, 9332, 626, 6407, 8374, 1018, 8371, 315, 5527, 3990, 9737, 1038, 8167, 6605, 761, 5761, 2046, 10164, 4230, 10349, 1954, 1186, 10281, 9555, 8475, 8966, 2759, 9277, 7524, 10287, 7701, 7605, 2246, 6360, 5485, 1230, 9216, 8377, 10116, 327, 8129, 6760, 4019, 1933, 7679, 323, 9946, 7346, 2669, 851, 6977, 1577, 1907, 1746, 6863, 9179, 7327, 8411, 3533, 9046, 5355, 125, 3174, 9237, 7850, 6770, 2579, 9389, 8324, 4231, 3556, 3413, 3153, 3352, 1003, 7856, 8174, 5510, 8087, 1035, 4781, 9173, 8233, 5827, 2960, 10246, 1951, 3278, 4323, 5085, 556, 7359, 5961, 8102, 1059, 2032, 7651, 127, 6617, 3392, 5246, 2891, 5478, 5878, 2648, 2090, 3246, 4010, 373, 5254, 3574, 7266, 5283, 5953, 6407, 4417, 7516, 387, 3438, 10355, 4494, 6370, 8628], [1, 3, 5, 8, 18, 66, 249, 820, 2434, 6784, 7631, 5909, 881, 3678, 6973, 9286, 7198, 2575, 1521, 2445, 4576, 9430, 816, 10538, 1832, 4472, 4913, 3825, 1395, 5067, 5537, 1999, 4239, 4114, 215, 2433, 3887, 4636, 1906, 1922, 9006, 7170, 7533, 10077, 9303, 7306, 9442, 7340, 8160, 7914, 10106, 1320, 10337, 10193, 6696, 5056, 551, 907, 4272, 7290, 7905, 9024, 4716, 10371, 6229, 4093, 6110, 2595, 25, 5760, 9962, 6338, 2805, 5187, 6445, 7430, 8540, 6147, 5415, 1410, 8750, 9067, 3992, 8131, 6465, 7098, 2304, 7937, 4661, 1731, 7574, 7598, 9189, 4808, 3481, 3599, 7424, 232, 10391, 7980, 6565, 5896, 7969, 3746, 2532, 6329, 7803, 3198, 5508, 27, 5161, 2491, 7111, 3507, 6950, 80, 3400, 7388, 307, 8251, 7873, 4845, 1602, 8705, 825, 6368, 10047, 40, 1011, 2657, 115, 9355, 7723, 9108, 798, 5605, 10542, 251, 1721, 8342, 818, 6368, 7672, 10128, 5093, 10307, 140, 4680, 1773], [1, 3, 5, 8, 13, 27, 97, 405, 1517, 5058, 4821, 1657, 3348, 8597, 1956, 4320, 6419, 2732, 8168, 2593, 9174, 6551, 7043, 2776, 922, 5998, 5962, 4493, 8349, 504, 7117, 8914, 3548, 9521, 5912, 8884, 6860, 1520, 1103, 1495, 6095, 7759, 10194, 8384, 2849, 5576, 9512, 3123, 8639, 5737, 2031, 1286, 4852, 9580, 6162, 2544, 7708, 7719, 4125, 9809, 4528, 3507, 8037, 7733, 6295, 7182, 2030, 5595, 10212, 2421, 4131, 9163, 3546, 399, 6170, 716, 3393, 8238, 5781, 5730, 6845, 10526, 2284, 4451, 1589, 6620, 1776, 6781, 10198, 5475, 9836, 6389, 3481, 3499, 6874, 10375, 7955, 6848, 7387, 2417, 7287, 3648, 6380, 4355, 4765, 5075, 7627, 6904, 7504, 8033, 4654, 896, 9266, 9201, 9624, 1029, 8182, 8043, 9101, 9209, 9131, 439, 8409, 4275, 9093, 3872, 4341, 2844, 6864, 7767, 9923, 9737, 5469, 2820, 9827, 4165, 1980, 264, 1432, 4647, 2827, 4246, 8943, 8805, 3755, 9790, 9826, 2507, 5560], [1, 3, 5, 8, 13, 21, 41, 139, 621, 2594, 9627, 514, 5214, 7946, 1156, 9379, 8513, 1906, 6946, 5443, 10332, 1884, 173, 8661, 7150, 4674, 3907, 2067, 3517, 3554, 1764, 782, 1055, 3335, 183, 2478, 2228, 8660, 979, 1151, 4981, 595, 10425, 5095, 6128, 9880, 6580, 6658, 3573, 2674, 6990, 6507, 7115, 5092, 1127, 613, 7750, 3911, 7332, 2248, 3131, 425, 1546, 5950, 7210, 7649, 2285, 5862, 1778, 5473, 922, 3216, 7706, 5994, 7833, 4226, 2448, 6171, 5731, 6433, 1559, 2557, 6455, 3577, 7676, 4744, 6174, 2697, 2691, 1149, 2913, 8486, 9469, 3914, 5524, 10311, 2567, 5438, 364, 7413, 10580, 1473, 4897, 9421, 2845, 8350, 2133, 8214, 3219, 821, 7436, 7468, 5587, 6860, 9497, 378, 4210, 1768, 149, 6823, 944, 6047, 8205, 7861, 8989, 9856, 1947, 7578, 5835, 9555, 8153, 9299, 6267, 2439, 3212, 6788, 6950, 4059, 3713, 4816, 9446, 2442, 4880, 7215, 9581, 4388, 10165, 7138, 8961], [1, 3, 5, 8, 13, 21, 34, 63, 197, 912, 4175, 6430, 9635, 10250, 9959, 2551, 7247, 3429, 10417, 7396, 9318, 635, 8202, 9104, 894, 4475, 7553, 6551, 8508, 4054, 3240, 5372, 2965, 3113, 7872, 1528, 900, 3938, 8961, 10081, 5330, 9592, 6914, 8858, 8472, 4340, 8835, 7681, 5852, 3836, 6473, 1768, 8623, 1326, 7732, 7394, 5308, 2537, 10373, 10456, 10601, 8306, 10351, 1961, 1013, 7868, 1743, 9263, 6753, 5906, 9217, 24, 10340, 10145, 2462, 6492, 945, 8518, 7707, 1067, 4772, 4174, 4744, 2149, 2232, 3667, 6972, 866, 8652, 7907, 220, 8515, 4286, 9475, 1330, 8642, 2307, 5113, 4858, 460, 6652, 9011, 5145, 10371, 4226, 5809, 649, 9813, 743, 3871, 9488, 9490, 4378, 3488, 5617, 4314, 7037, 3745, 9859, 9755, 982, 7534, 872, 8507, 5055, 3800, 9475, 7430, 6296, 2739, 9902, 1694, 2517, 10148, 1958, 1767, 238, 2893, 5204, 9455, 6084, 7952, 7916, 6386, 7740, 9631, 6393, 5963, 7491], [1, 3, 5, 8, 13, 21, 34, 55, 98, 279, 1298, 6407, 7283, 7766, 1666, 5908, 4963, 9476, 7512, 2767, 3433, 10380, 5490, 1984, 669, 9956, 1999, 5623, 5772, 1431, 4367, 4564, 8307, 5064, 2578, 10228, 9068, 9097, 3823, 4009, 12, 8857, 7840, 7669, 7055, 841, 5152, 9194, 7389, 10420, 8543, 3855, 10560, 2795, 7609, 4454, 1365, 6490, 715, 6877, 6084, 6067, 8145, 146, 4307, 5611, 4918, 10041, 2216, 7281, 2295, 8895, 1207, 7422, 10355, 4124, 9340, 6575, 1918, 2064, 5056, 6864, 5383, 4599, 9470, 2188, 1114, 3861, 417, 3328, 4129, 352, 7699, 2136, 8983, 9175, 162, 3624, 3623, 7822, 9880, 5026, 1275, 5840, 8552, 3664, 6578, 2289, 571, 9622, 5851, 7755, 7230, 135, 3935, 1748, 9751, 2054, 6775, 5384, 6733, 5431, 694, 6806, 1927, 4965, 7088, 6127, 4803, 536, 6891, 1860, 8130, 6331, 6749, 4468, 2486, 31, 2647, 5563, 5374, 10017, 9674, 478, 6100, 5192, 10550, 2267, 2352], [1, 3, 5, 8, 13, 21, 34, 55, 89, 154, 398, 1807, 9465, 3051, 5176, 4910, 3182, 1719, 7992, 2614, 4222, 5285, 4270, 1797, 5848, 6962, 22, 1434, 4706, 6058, 6814, 3684, 5759, 2354, 6378, 614, 4966, 6636, 1951, 14, 7472, 7766, 5724, 1613, 1877, 730, 5464, 665, 1175, 3031, 2710, 6814, 894, 8534, 7992, 5577, 2700, 3831, 6167, 4829, 6948, 6324, 3189, 5177, 8679, 2595, 4841, 442, 2242, 1994, 10194, 1896, 1535, 3762, 1688, 1821, 7431, 6739, 6091, 5916, 8089, 8983, 10392, 1841, 6969, 1924, 9004, 279, 3212, 1634, 3202, 2795, 694, 9536, 5922, 9680, 2293, 2064, 7348, 2123, 4187, 6671, 2347, 6219, 6229, 7951, 7619, 4257, 4883, 184, 7635, 5858, 10193, 4719, 3589, 212, 6114, 786, 4315, 3499, 5929, 3158, 5083, 6224, 9457, 7252, 1457, 669, 2342, 3330, 3205, 2807, 2304, 3190, 2732, 676, 6430, 7475, 9430, 7123, 8777, 10485, 2416, 7143, 2318, 10105, 130, 3082, 6924], [1, 3, 5, 8, 13, 21, 34, 55, 89, 144, 244, 575, 2480, 2933, 6200, 4941, 7343, 3776, 5569, 1546, 9816, 5522, 2755, 259, 333, 1136, 7182, 4232, 2717, 1284, 1786, 539, 4216, 8405, 9341, 8262, 1469, 7997, 9154, 3039, 10400, 1248, 2379, 6058, 4880, 850, 8882, 7346, 9573, 3737, 9055, 35, 2700, 6407, 70, 9660, 7419, 6967, 9969, 9192, 2606, 10368, 7295, 4442, 2525, 7151, 346, 9423, 6728, 4662, 4287, 9959, 6171, 3503, 3170, 7444, 10549, 6390, 2630, 2160, 8356, 3051, 8508, 614, 1372, 3101, 718, 7378, 7071, 903, 5028, 4097, 7558, 2176, 10377, 2553, 1728, 6373, 2149, 9663, 1874, 3510, 10026, 713, 9123, 8524, 5642, 8946, 2158, 9567, 6890, 1981, 7997, 6486, 2563, 6473, 9068, 4109, 8893, 3964, 547, 2220, 7148, 8128, 1761, 8989, 3783, 3189, 7093, 4597, 3160, 4705, 1282, 228, 6765, 574, 8093, 6517, 3330, 7149, 2380, 5123, 6353, 625, 3955, 7607, 3690, 331, 4199]]

for _ in range(int(input())):
    n, k = map(int, input().split())
    global mod
    mod = 941
    t1 = guess_nth_term(vector(v1[k]), n-1)
    mod = 10627
    t2 = guess_nth_term(vector(v2[k]), n-1)
    print(1 if n == 1 else (t1*10627*433 + t2*941*5737) % 10000007

"""
def f(n, k):
    s = 0

    for m in range(1, n+1):
        if n-m > m+1:
            continue
        t = 0
        if k:
            for x in range(m):
                if x % k == 0:
                    t += comb(m, x)
        else:
            t += 1
        s += t*comb(m+1, n-m)

    return s
"""
